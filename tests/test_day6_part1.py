import os

import pytest

from day6.part1 import parse_file, compute_new_generation, resolution


def test_file_is_parsed_correctly():
    data = parse_file(os.path.join("data", "test_file_day6"))

    assert data == [3, 4, 3, 1, 2]


@pytest.mark.parametrize(
    "old_generation, expected_new_generation",
    [
        [[3, 4, 3, 1, 2], [2, 3, 2, 0, 1]],
        [[2, 3, 2, 0, 1], [1, 2, 1, 6, 0, 8]],
        [[1, 2, 1, 6, 0, 8], [0, 1, 0, 5, 6, 7, 8]],
        [[0, 1, 0, 5, 6, 7, 8], [6, 0, 6, 4, 5, 6, 7, 8, 8]],
        [[6, 0, 6, 4, 5, 6, 7, 8, 8], [5, 6, 5, 3, 4, 5, 6, 7, 7, 8]],
        [[5, 6, 5, 3, 4, 5, 6, 7, 7, 8], [4, 5, 4, 2, 3, 4, 5, 6, 6, 7]],
        [[4, 5, 4, 2, 3, 4, 5, 6, 6, 7], [3, 4, 3, 1, 2, 3, 4, 5, 5, 6]],
        [[3, 4, 3, 1, 2, 3, 4, 5, 5, 6], [2, 3, 2, 0, 1, 2, 3, 4, 4, 5]],
        [[2, 3, 2, 0, 1, 2, 3, 4, 4, 5], [1, 2, 1, 6, 0, 1, 2, 3, 3, 4, 8]],
        [
            [1, 2, 1, 6, 0, 1, 2, 3, 3, 4, 8],
            [0, 1, 0, 5, 6, 0, 1, 2, 2, 3, 7, 8],
        ],
        [
            [0, 1, 0, 5, 6, 0, 1, 2, 2, 3, 7, 8],
            [6, 0, 6, 4, 5, 6, 0, 1, 1, 2, 6, 7, 8, 8, 8],
        ],
        [
            [6, 0, 6, 4, 5, 6, 0, 1, 1, 2, 6, 7, 8, 8, 8],
            [5, 6, 5, 3, 4, 5, 6, 0, 0, 1, 5, 6, 7, 7, 7, 8, 8],
        ],
        [
            [5, 6, 5, 3, 4, 5, 6, 0, 0, 1, 5, 6, 7, 7, 7, 8, 8],
            [4, 5, 4, 2, 3, 4, 5, 6, 6, 0, 4, 5, 6, 6, 6, 7, 7, 8, 8],
        ],
        [
            [4, 5, 4, 2, 3, 4, 5, 6, 6, 0, 4, 5, 6, 6, 6, 7, 7, 8, 8],
            [3, 4, 3, 1, 2, 3, 4, 5, 5, 6, 3, 4, 5, 5, 5, 6, 6, 7, 7, 8],
        ],
        [
            [3, 4, 3, 1, 2, 3, 4, 5, 5, 6, 3, 4, 5, 5, 5, 6, 6, 7, 7, 8],
            [2, 3, 2, 0, 1, 2, 3, 4, 4, 5, 2, 3, 4, 4, 4, 5, 5, 6, 6, 7],
        ],
        [
            [2, 3, 2, 0, 1, 2, 3, 4, 4, 5, 2, 3, 4, 4, 4, 5, 5, 6, 6, 7],
            [1, 2, 1, 6, 0, 1, 2, 3, 3, 4, 1, 2, 3, 3, 3, 4, 4, 5, 5, 6, 8],
        ],
        [
            [1, 2, 1, 6, 0, 1, 2, 3, 3, 4, 1, 2, 3, 3, 3, 4, 4, 5, 5, 6, 8],
            [0, 1, 0, 5, 6, 0, 1, 2, 2, 3, 0, 1, 2, 2, 2, 3, 3, 4, 4, 5, 7, 8],
        ],
        [
            [0, 1, 0, 5, 6, 0, 1, 2, 2, 3, 0, 1, 2, 2, 2, 3, 3, 4, 4, 5, 7, 8],
            [
                6,
                0,
                6,
                4,
                5,
                6,
                0,
                1,
                1,
                2,
                6,
                0,
                1,
                1,
                1,
                2,
                2,
                3,
                3,
                4,
                6,
                7,
                8,
                8,
                8,
                8,
            ],
        ],
    ],
)
def test_next_generation_is_computed(old_generation, expected_new_generation):
    new_generation = compute_new_generation(old_generation)

    assert new_generation == expected_new_generation


def test_puzzle_is_resolved():
    result = resolution([3, 4, 3, 1, 2])

    assert result == 5934
